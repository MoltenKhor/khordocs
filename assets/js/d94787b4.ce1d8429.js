"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[928],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var o=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,o,a=function(e,t){if(null==e)return{};var r,o,a={},n=Object.keys(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=o.createContext({}),p=function(e){var t=o.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=p(e.components);return o.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},f=o.forwardRef((function(e,t){var r=e.components,a=e.mdxType,n=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(r),f=a,m=c["".concat(s,".").concat(f)]||c[f]||d[f]||n;return r?o.createElement(m,i(i({ref:t},u),{},{components:r})):o.createElement(m,i({ref:t},u))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var n=r.length,i=new Array(n);i[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:a,i[1]=l;for(var p=2;p<n;p++)i[p]=r[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}f.displayName="MDXCreateElement"},2479:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>n,metadata:()=>l,toc:()=>p});var o=r(7462),a=(r(7294),r(3905));const n={sidebar_position:10},i="SAM X Eclipse",l={unversionedId:"PCBs/SAMxEclipse",id:"PCBs/SAMxEclipse",title:"SAM X Eclipse",description:"Compatible PCB for Snurrebassen's Eclipse Keyboard",source:"@site/docs/PCBs/SAMxEclipse.md",sourceDirName:"PCBs",slug:"/PCBs/SAMxEclipse",permalink:"/docs/PCBs/SAMxEclipse",draft:!1,tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10},sidebar:"tutorialSidebar",previous:{title:"Custom PCBs",permalink:"/docs/category/custom-pcbs"}},s={},p=[{value:"Compatible PCB for Snurrebassen&#39;s Eclipse Keyboard",id:"compatible-pcb-for-snurrebassens-eclipse-keyboard",level:2},{value:"Basic Informations:",id:"basic-informations",level:3},{value:"Specs:",id:"specs",level:3},{value:"Supported Layout options:",id:"supported-layout-options",level:3},{value:"Features:",id:"features",level:3},{value:"Edit the Keymap:",id:"edit-the-keymap",level:3},{value:"Flash your firmware:",id:"flash-your-firmware",level:3},{value:"DFU Soft Mode:",id:"dfu-soft-mode",level:4},{value:"DFU Hard Mode:",id:"dfu-hard-mode",level:4},{value:"Firmwares:",id:"firmwares",level:3}],u={toc:p},c="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(c,(0,o.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"sam-x-eclipse"},"SAM X Eclipse"),(0,a.kt)("h2",{id:"compatible-pcb-for-snurrebassens-eclipse-keyboard"},"Compatible PCB for Snurrebassen's Eclipse Keyboard"),(0,a.kt)("h3",{id:"basic-informations"},"Basic Informations:"),(0,a.kt)("p",null,"This PCB is not an official product from Snurrebassen's Eclipse Groupbuy instead it's a third party replacement for those who own an Eclipse with dead or missing PCB from the original Groupbuy."),(0,a.kt)("p",null,"The PCB has been designed from scratch using the opensource plate files and inherits SAM80-H architecture."),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"A thank goes to Snurrebassen for approving and appreciating this side project, in hope to save as many Eclipse keyboards out there <3")," "),(0,a.kt)("p",null,"PCB available for purchase on ",(0,a.kt)("a",{parentName:"p",href:"https://khor.store/products/sam-x-eclipse-h-pcb"},"khor Store")),(0,a.kt)("h3",{id:"specs"},"Specs:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"1.6mm FR4 HASL Lead-Free PCB"),(0,a.kt)("li",{parentName:"ul"},"Purple Solder Mask"),(0,a.kt)("li",{parentName:"ul"},"3x RGB SK6812mini-E indicator LEDs"),(0,a.kt)("li",{parentName:"ul"},"JST connection (as the original PCB)"),(0,a.kt)("li",{parentName:"ul"},"Lavender MX HotSwap Sockets")),(0,a.kt)("h3",{id:"supported-layout-options"},"Supported Layout options:"),(0,a.kt)("p",null,"All options are available on the same PCB."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Standard | split Backspace"),(0,a.kt)("li",{parentName:"ul"},"Standard | split R-Shift"),(0,a.kt)("li",{parentName:"ul"},"Standard | split L-Shift"),(0,a.kt)("li",{parentName:"ul"},"ANSI | ISO enter"),(0,a.kt)("li",{parentName:"ul"},"6.25U | 7U | split Spacebar (2.75-1.25-2.25)")),(0,a.kt)("admonition",{title:"Split Spacebar requires soldering skills",type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"Due to the switch position the sockets for al 3 bottom row configurations was not possible, therefore the split 1.25U middle switch position does not work out of the box and requires you to desolder the 6.25U socket and move on the left position.\nIn case you want the split-spacebar compatibility out of the box but can't solder, email me or leave a note on the order asking you're wishing for this modification, it'll be done free of charge.")),(0,a.kt)("h3",{id:"features"},"Features:"),(0,a.kt)("p",null,"There are no extra feature from the original PCB, the only difference is the indicator LED on the arrow claster being RGB instead of single-colour diode. This features more playground and customization for Capslock, ScrollLock or any other indicator-related action.\nThere are currently two differente compiled firmwares that feature two main behaviors:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},'ALL-LED lights up: when no action is activated all 3 LEDs will light up as underglow effect (or OFF if "Direct Control" profile is selected). When CapsLock or M(1),M(2),M(3) layers are triggered all 3 LEDs will light up with a defined colour. '),(0,a.kt)("li",{parentName:"ul"},'ONE-LED per action: when no actuon is activates all 3 LEDs will light up as underglow effect (or OFF if "Direct Control" profile is selected). When Capslock is on the left LED will turn on, if one of the layers is triggered the center LED will light up, if Scroll Lock is activated the right LED turns on. All 3 actions can be activated and separately being signaled the LEDs being independant.')),(0,a.kt)("p",null,"By editing the source code you can add or modify the LEDs behavior by yourself."),(0,a.kt)("h3",{id:"edit-the-keymap"},"Edit the Keymap:"),(0,a.kt)("p",null,"SAM X Eclipse is based on QMK/VIAL so you can use ",(0,a.kt)("a",{parentName:"p",href:"https://vial.rocks"},"VIAL WEB UI"),"."),(0,a.kt)("h3",{id:"flash-your-firmware"},"Flash your firmware:"),(0,a.kt)("p",null,"All PCBs are shipped pre-flashed with QMK/VIAL compatible firmware, in case you want to flash your own you need to put the PCB in DFU mode:"),(0,a.kt)("h4",{id:"dfu-soft-mode"},"DFU Soft Mode:"),(0,a.kt)("p",null,"Plug the USB Cable to your PCB while holding ESC (or anything you have mapped on the first key on top-left) and release ESC just after connecting it. If you see a device named ",(0,a.kt)("em",{parentName:"p"},"RPI-P20")," as a memory unit on your computer, you're successfully in DFU Mode."),(0,a.kt)("h4",{id:"dfu-hard-mode"},"DFU Hard Mode:"),(0,a.kt)("p",null,'Plug the USB Cable to your PCB while Holding "',(0,a.kt)("em",{parentName:"p"},"Don't Panic!"),'" and release it just after connecting it. If you see a device named ',(0,a.kt)("em",{parentName:"p"},"RPI-P20")," as a memory unit on your computer, you're successfully in DFU Mode."),(0,a.kt)("p",null,"Once you're in DFU Mode just drag & drop the uf2 file in the root folder of the ",(0,a.kt)("em",{parentName:"p"},"RPI-P20")," device. The PCB will automatically reboot and it will be fully functional."),(0,a.kt)("p",null,"If you load a wrong or bugged firmware, always use the Hard Mode DFU method since will always work."),(0,a.kt)("h3",{id:"firmwares"},"Firmwares:"),(0,a.kt)("p",null,"All firmwares and source files can be found on the ",(0,a.kt)("a",{parentName:"p",href:"/docs/Firmwares#sam-x-eclipse"},"Firmware page")))}d.isMDXComponent=!0}}]);